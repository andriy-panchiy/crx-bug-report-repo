{
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "tsconfig.json",
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "plugins": ["react", "react-hooks", "react-refresh", "simple-import-sort", "import", "validate-jsx-nesting", "@typescript-eslint/eslint-plugin"],
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:prettier/recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:tailwindcss/recommended",
    "prettier"
  ],
  "root": true,
  "globals": {
    "chrome": "readonly",
    "page": true,
    "browser": true,
    "context": true,
    "jestPuppeteer": true
  },
  "env": {
    "node": true,
    "jest": true,
    "browser": true,
    "es2021": true
  },
  "ignorePatterns": ["dist", "node_modules", ".eslintrc.cjs", "eslint.config.mjs"],
  "rules": {
    "import/order": [
      "error",
      {
        "groups": ["index", "sibling", "parent", "internal", "external", "builtin"]
      }
    ],
    "react-refresh/only-export-components": ["warn", { "allowConstantExport": true }],
    "simple-import-sort/exports": "error",
    "@typescript-eslint/interface-name-prefix": "off",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/no-explicit-any": "off",
    "react/jsx-uses-react": "error",
    "react/jsx-uses-vars": "error",
    "react/jsx-key": "error",
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",
    "validate-jsx-nesting/no-invalid-jsx-nesting": "error",
    "prettier/prettier": ["error", { "endOfLine": "auto" }]
  },
  "overrides": [
    {
      "files": [".*rc.js", "*.config.js"],
      "env": {
        "node": true
      }
    },
    {
      "files": ["*.js", "*.jsx", "*.ts", "*.tsx"],
      "rules": {
        "simple-import-sort/imports": [
          "warn",
          {
            "groups": [
              // Packages `react` related packages come first.
              ["^react", "^@?\\w"],
              // Internal packages.
              ["^(@|components)(/.*|$)"],
              // Side effect imports.
              ["^\\u0000"],
              // Parent imports. Put `..` last.
              ["^\\.\\.(?!/?$)", "^\\.\\./?$"],
              // Other relative imports. Put same-folder imports and `.` last.
              ["^\\./(?=.*/)(?!/?$)", "^\\.(?!/?$)", "^\\./?$"],
              // Style imports.
              ["^.+\\.?(css)$"]
            ]
          }
        ]
      }
    }
  ],
  "settings": {
    "tailwindcss": {
      "callees": ["classnames", "clsx", "ctl", "cn", "cva"],
      "cssFiles": ["**/*.css", "!**/node_modules", "!**/.*", "!**/dist", "!**/build"],
      "whitelist": ["active", "disabled", "selected", "icon"]
    },
    "react": {
      "version": "detect"
    }
  }
}
